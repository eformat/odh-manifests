
---
# Source: airflow/templates/scheduler/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-aflow-airflow-scheduler
  labels:
    app.kubernetes.io/name: airflow
    helm.sh/chart: airflow-10.3.2
    app.kubernetes.io/instance: app-aflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: scheduler
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: airflow
      app.kubernetes.io/instance: app-aflow
      app.kubernetes.io/component: scheduler
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: airflow
        helm.sh/chart: airflow-10.3.2
        app.kubernetes.io/instance: app-aflow
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: scheduler
      annotations:
        checksum/configmap: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:

      priorityClassName: ""
      # securityContext:
      #   fsGroup: 1001
      serviceAccountName: default
      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: airflow
                    app.kubernetes.io/instance: app-aflow
                    app.kubernetes.io/component: scheduler
                namespaces:
                  - "ml-workshop"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:


      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: git-sync
          command:
            - /git-sync
          env:
            - name: GIT_SYNC_REPO
              value: 'https://github.com/masoodfaisal/dags/'
            - name: GIT_SYNC_DEST
              value: gitdags
            - name: GIT_SYNC_BRANCH
              value: main
            - name: GIT_SYNC_ROOT
              value: /tmp/git
            - name: GIT_SYNC_ONE_TIME
              value: 'false'
            - name: GIT_SYNC_REV
            - name: HOME
              value: /tmp
          ports:
            - name: gitsync
              containerPort: 2020
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: dags-data
              mountPath: /tmp/git
          terminationMessagePolicy: File
          image: 'k8s.gcr.io/git-sync/git-sync:v3.2.2'
        - name: airflow-scheduler
          image: quay.io/ml-aml-workshop/airflow-custom:2.0.0.scheduler
          imagePullPolicy: "Always"
          # securityContext:
          #   runAsUser: 1001
          env:
            - name: AIRFLOW_FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-aflow-airflow
                  key: airflow-fernetKey
            - name: AIRFLOW_LOAD_EXAMPLES
              value: "no"
            - name: AIRFLOW_DATABASE_NAME
              value: "bitnami_airflow"
            - name: AIRFLOW_DATABASE_USERNAME
              value: "bn_airflow"
            - name: AIRFLOW_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-postgresql
                  key: postgresql-password
            - name: AIRFLOW_DATABASE_HOST
              value: "app-aflow-postgresql"
            - name: AIRFLOW_DATABASE_PORT_NUMBER
              value: "5432"

            - name: REDIS_HOST
              value: "app-aflow-redis-master"
            - name: REDIS_PORT_NUMBER
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-redis
                  key: redis-password

            - name: AIRFLOW_EXECUTOR
              value: CeleryExecutor
            - name: AIRFLOW_WEBSERVER_HOST
              value: app-aflow-airflow
            - name: AIRFLOW_WEBSERVER_PORT_NUMBER
              value: "8080"
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              value: "IKnowWhatYouDidLastYear"

          envFrom:
          ports:
            - name: task-logs
              containerPort: 8793
          volumeMounts:
            - name: dags-data
              mountPath: /opt/bitnami/airflow/dags
          resources:
            limits: {}
            requests: {}
      volumes:
        - name: dags-data
          emptyDir: { }

---
# Source: airflow/templates/web/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-aflow-airflow-web
  labels:
    app.kubernetes.io/name: airflow
    helm.sh/chart: airflow-10.3.2
    app.kubernetes.io/instance: app-aflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: airflow
      app.kubernetes.io/instance: app-aflow
      app.kubernetes.io/component: web
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: airflow
        helm.sh/chart: airflow-10.3.2
        app.kubernetes.io/instance: app-aflow
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: web
      annotations:
        checksum/configmap: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:

      priorityClassName: ""

      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: airflow
                    app.kubernetes.io/instance: app-aflow
                    app.kubernetes.io/component: web
                namespaces:
                  - "ml-workshop"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      serviceAccountName: airflow2-proxy
      containers:
        # - name: oauth-proxy
        #   image: openshift/oauth-proxy:latest
        #   imagePullPolicy: IfNotPresent
        #   ports:
        #     - containerPort: 8080
        #       name: public
        #   args:
        #     - --https-address=
        #     - --http-address=:8080
        #     - --provider=openshift
        #     - --openshift-service-account=airflow2-proxy
        #     - --upstream=http://localhost:8888
        #     - --cookie-secret=SECRETAIRFLOW2
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: git-sync
          command:
            - /git-sync
          env:
            - name: GIT_SYNC_REPO
              value: 'https://github.com/masoodfaisal/dags/'
            - name: GIT_SYNC_DEST
              value: gitdags
            - name: GIT_SYNC_BRANCH
              value: main
            - name: GIT_SYNC_ROOT
              value: /tmp/git
            - name: GIT_SYNC_ONE_TIME
              value: 'false'
            - name: GIT_SYNC_REV
            - name: HOME
              value: /tmp
          ports:
            - name: gitsync
              protocol: TCP
              containerPort: 2020
          imagePullPolicy: Always
          volumeMounts:
            - name: dags-data
              mountPath: /tmp/git
          terminationMessagePolicy: File
          image: 'k8s.gcr.io/git-sync/git-sync:v3.2.2'
        - name: airflow-web
          image: quay.io/ml-aml-workshop/airflow-custom:2.1.6.web
          imagePullPolicy: "Always"
#          securityContext:
#            runAsUser: 1001
          env:
            - name: AIRFLOW_FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-aflow-airflow
                  key: airflow-fernetKey
            - name: AIRFLOW_LOAD_EXAMPLES
              value: "no"
            - name: AIRFLOW_DATABASE_NAME
              value: "bitnami_airflow"
            - name: AIRFLOW_DATABASE_USERNAME
              value: "bn_airflow"
            - name: AIRFLOW_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-postgresql
                  key: postgresql-password
            - name: AIRFLOW_DATABASE_HOST
              value: "app-aflow-postgresql"
            - name: AIRFLOW_DATABASE_PORT_NUMBER
              value: "5432"

            - name: REDIS_HOST
              value: "app-aflow-redis-master"
            - name: REDIS_PORT_NUMBER
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-redis
                  key: redis-password

            - name: AIRFLOW_EXECUTOR
              value: CeleryExecutor
            - name: AIRFLOW_WEBSERVER_HOST
              value: "0.0.0.0"
            - name: AIRFLOW_WEBSERVER_PORT_NUMBER
              value: "8080"
            - name: AIRFLOW__WEBSERVER__RBAC
              value: "False"
            - name: AIRFLOW__WEBSERVER__AUTHENTICATE
              value: "False"
            - name: AIRFLOW_USERNAME
              value: user
            - name: AIRFLOW_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-airflow
                  key: airflow-password
            - name: AIRFLOW_BASE_URL
              value: http://127.0.0.1:8080
            - name: AIRFLOW_LDAP_ENABLE
              value: "no"
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              value: "IKnowWhatYouDidLastYear"
            - name: AUTH_ROLE_PUBLIC
              value: "Public"
            - name: AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX
              value: "True"
            - name: OAUTH_API_BASE_URL
              value: "https://openshift.default.svc.cluster.local:443"
            - name: REQUESTS_CA_BUNDLE
              value: "/tmp/combined.pem" 
            - name: SA_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: airflow2-proxy
                  key: token

          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            tcpSocket:
              port: http

            failureThreshold: 6
            initialDelaySeconds: 180
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: http

            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: dags-data
              mountPath: /opt/bitnami/airflow/dags

          resources:
            limits: {}
            requests: {}
      volumes:
        - name: dags-data
          emptyDir: {}

---
# Source: airflow/charts/postgresql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: app-aflow-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.9.4
    app.kubernetes.io/instance: app-aflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
  namespace: ml-workshop
spec:
  serviceName: app-aflow-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: app-aflow
      role: primary
  template:
    metadata:
      name: app-aflow-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.9.4
        app.kubernetes.io/instance: app-aflow
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: postgresql
                    app.kubernetes.io/instance: app-aflow
                    app.kubernetes.io/component: primary
                namespaces:
                  - "ml-workshop"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      # securityContext:
      #   fsGroup: 1001
      automountServiceAccountToken: false
      # initContainers:
      #   - name: init-chmod-data
      #     image: docker.io/bitnami/minideb:latest
      #     imagePullPolicy: "Always"
      #     resources:
      #       requests:
      #         cpu: 250m
      #         memory: 256Mi
      #     command:
      #       - sh
      #       - -c
      #       - |
      #         chown -R 1001:1001 /bitnami
      #         if [ -d /bitnami/postgresql/data ]; then
      #           chmod  0700 /bitnami/postgresql/data;
      #         fi
      #     volumeMounts:
      #       - name: aflow-data
      #         mountPath: /bitnami/postgresql
      containers:
        - name: app-aflow-postgresql
          image: registry.redhat.io/rhel8/postgresql-10:1-154
          #docker.io/bitnami/postgresql:10.7.0
          imagePullPolicy: "Always"
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
          # securityContext:
          #   runAsUser: 1001
          env:
            # - name: PGDATA
            #   value: "/bitnami/postgresql"
            # - name: BITNAMI_DEBUG
            #   value: "false"
            # - name: POSTGRESQL_PORT_NUMBER
            #   value: "5432"
            # - name: POSTGRESQL_VOLUME_DIR
            #   value: "/bitnami/postgresql"
            # - name: PGDATA
            #   value: "/bitnami/postgresql/data"
            # - name: POSTGRES_POSTGRES_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: app-aflow-postgresql
            #       key: postgresql-postgres-password
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-postgresql
                  key: postgresql-postgres-password

            # - name: POSTGRES_USER
            #   value: "bn_airflow"
            - name: POSTGRESQL_USER
              value: "bn_airflow"
            # - name: POSTGRES_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: app-aflow-postgresql
            #       key: postgresql-password

            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-postgresql
                  key: postgresql-password
            - name: POSTGRESQL_DATABASE
              value: "bitnami_airflow"
            # - name: POSTGRES_DB
            #   value: "bitnami_airflow"
            # - name: POSTGRESQL_ENABLE_LDAP
            #   value: "no"
            # - name: POSTGRESQL_ENABLE_TLS
            #   value: "no"
            # - name: POSTGRESQL_LOG_HOSTNAME
            #   value: "false"
            # - name: POSTGRESQL_LOG_CONNECTIONS
            #   value: "false"
            # - name: POSTGRESQL_LOG_DISCONNECTIONS
            #   value: "false"
            # - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
            #   value: "off"
            # - name: POSTGRESQL_CLIENT_MIN_MESSAGES
            #   value: "error"
            # - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
            #   value: "pgaudit"
          ports:
            - name: tcp-postgresql
              containerPort: 5432
          livenessProbe:
            tcpSocket:
              port: 5432

            # exec:
            #   command:
            #     - /bin/sh
            #     - -c
            #     - exec pg_isready -U "bn_airflow" -d "dbname=bitnami_airflow" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 5432

            # exec:
            #   command:
            #     - /bin/sh
            #     - -c
            #     - -e
            #     - |
            #       exec pg_isready -U "bn_airflow" -d "dbname=bitnami_airflow" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            # - name: dshm
            #   mountPath: /dev/shm
            - name: aflow-data
              # mountPath: /bitnami/postgresql
              mountPath: /var/lib/pgsql/data
              # subPath:
      # volumes:
      #   - name: dshm
      #     emptyDir:
      #       medium: Memory
  volumeClaimTemplates:
    - metadata:
        name: aflow-data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: airflow/charts/redis/templates/master/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: app-aflow-redis-master
  namespace: "ml-workshop"
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-14.8.11
    app.kubernetes.io/instance: app-aflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: app-aflow
      app.kubernetes.io/component: master
  serviceName: app-aflow-redis-headless
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-14.8.11
        app.kubernetes.io/instance: app-aflow
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: master
      annotations:
        checksum/configmap: 477b9ea763dc6dfa714452f6a707a13d3b4a48d9c512e594d44a5233db098999
        checksum/health: 9463811d25909dca6b3c85715619dc375de313711438368cd8a7967fd8248221
        checksum/scripts: 0b4fee4f0d3a3a781a82225288a8e70e92a1a08d2e396d21e84188a6b1906cc0
        checksum/secret: accf045d76eda92532bfdcc8e5ceaf21dda9888d6ba641c0d8bfb79cb11ebb6a
    spec:

      serviceAccountName: app-aflow-redis
      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: redis
                    app.kubernetes.io/instance: app-aflow
                    app.kubernetes.io/component: master
                namespaces:
                  - "ml-workshop"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      terminationGracePeriodSeconds: 30
      containers:
        - name: redis
          image: registry.redhat.io/rhel8/redis-6:1-18
          #docker.io/bitnami/redis:6.2.5-debian-10-r11
          imagePullPolicy: "Always"
          # command:
          #   - /bin/bash
          # args:
          #   - -c
          #   - /opt/bitnami/scripts/start-scripts/start-master.sh
          env:
            # - name: BITNAMI_DEBUG
            #   value: "false"
            # - name: REDIS_REPLICATION_MODE
            #   value: master
            # - name: ALLOW_EMPTY_PASSWORD
            #   value: "no"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-redis
                  key: redis-password
            # - name: REDIS_TLS_ENABLED
            #   value: "no"
            # - name: REDIS_PORT
            #   value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            tcpSocket: 
              port: 6379
            # exec:
            #   command:
            #     - sh
            #     - -c
            #     - /health/ping_liveness_local.sh 5
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            tcpSocket: 
              port: 6379

            # exec:
            #   command:
            #     - sh
            #     - -c
            #     - /health/ping_readiness_local.sh 1
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            # - name: start-scripts
            #   mountPath: /opt/bitnami/scripts/start-scripts
            # - name: health
            #   mountPath: /health
            - name: redis-data
              # mountPath: /data
              mountPath: /var/lib/redis/data
              subPath:
            # - name: config
            #   mountPath: /opt/bitnami/redis/mounted-etc
            # - name: redis-tmp-conf
            #   mountPath: /opt/bitnami/redis/etc/
            # - name: tmp
            #   mountPath: /tmp

      volumes:
        # - name: start-scripts
        #   configMap:
        #     name: app-aflow-redis-scripts
        #     defaultMode: 0755
        # - name: health
        #   configMap:
        #     name: app-aflow-redis-health
        #     defaultMode: 0755
        # - name: config
        #   configMap:
        #     name: app-aflow-redis-configuration
        # - name: redis-tmp-conf
        #   emptyDir: {}
        # - name: tmp
        #   emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app.kubernetes.io/name: redis
          app.kubernetes.io/instance: app-aflow
          app.kubernetes.io/component: master
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"

---
# Source: airflow/templates/worker/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: app-aflow-airflow-worker
  labels:
    app.kubernetes.io/name: airflow
    helm.sh/chart: airflow-10.3.2
    app.kubernetes.io/instance: app-aflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: airflow
      app.kubernetes.io/instance: app-aflow
      app.kubernetes.io/component: worker
  serviceName: app-aflow-airflow-worker-headless
  replicas: 1
  updateStrategy:
    type: "RollingUpdate"
  template:
    metadata:
      annotations:
        checksum/configmap: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/name: airflow
        helm.sh/chart: airflow-10.3.2
        app.kubernetes.io/instance: app-aflow
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: worker
    spec:

      priorityClassName: ""
#      securityContext:
#        fsGroup: 1001
      serviceAccountName: default
      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: airflow
                    app.kubernetes.io/instance: app-aflow
                    app.kubernetes.io/component: worker
                namespaces:
                  - "ml-workshop"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      initContainers:
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: git-sync
          command:
            - /git-sync
          env:
            - name: GIT_SYNC_REPO
              value: 'https://github.com/masoodfaisal/dags/'
            - name: GIT_SYNC_DEST
              value: gitdags
            - name: GIT_SYNC_BRANCH
              value: main
            - name: GIT_SYNC_ROOT
              value: /tmp/git
            - name: GIT_SYNC_ONE_TIME
              value: 'false'
            - name: GIT_SYNC_REV
            - name: HOME
              value: /tmp
          ports:
            - name: gitsync
              protocol: TCP
              containerPort: 2020
          imagePullPolicy: Always
          volumeMounts:
            - name: dags-data
              mountPath: /tmp/git
          terminationMessagePolicy: File
          image: 'k8s.gcr.io/git-sync/git-sync:v3.2.2'
        - name: airflow-worker
          image: quay.io/ml-aml-workshop/airflow-custom:2.0.0.worker
          imagePullPolicy: "Always"
          # securityContext:
          #   runAsUser: 1001
          resources:
            limits: {}
            requests: {}
          env:
            - name: AIRFLOW_FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-aflow-airflow
                  key: airflow-fernetKey
            - name: AIRFLOW_LOAD_EXAMPLES
              value: "no"
            - name: AIRFLOW_DATABASE_NAME
              value: "bitnami_airflow"
            - name: AIRFLOW_DATABASE_USERNAME
              value: "bn_airflow"
            - name: AIRFLOW_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-postgresql
                  key: postgresql-password
            - name: AIRFLOW_DATABASE_HOST
              value: "app-aflow-postgresql"
            - name: AIRFLOW_DATABASE_PORT_NUMBER
              value: "5432"

            - name: REDIS_HOST
              value: "app-aflow-redis-master"
            - name: REDIS_PORT_NUMBER
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-aflow-redis
                  key: redis-password
            - name: AIRFLOW_EXECUTOR
              value: CeleryExecutor
            - name: AIRFLOW_WEBSERVER_HOST
              value: app-aflow-airflow
            - name: AIRFLOW_WEBSERVER_PORT_NUMBER
              value: "8080"
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              value: "IKnowWhatYouDidLastYear"

          envFrom:
          ports:
            - name: worker
              containerPort: 8793
          livenessProbe:
            tcpSocket:
              port: worker

            failureThreshold: 6
            initialDelaySeconds: 180
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: worker

            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: dags-data
              mountPath: /opt/bitnami/airflow/dags

      volumes:
        - name: dags-data
          emptyDir: { }

